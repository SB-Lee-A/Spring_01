1.클래스 위의 @RequestMapping("/board/")
-http://localhost:8081/board/로 시작되는 요청을 다 boardController에서
받겠다는 의미 입니다.
따라서 여기에있는 /create 경로를 호출하고싶다면
http://localhost:8081/board/create를 입력하세요
(만약 클래스 위에 @RequestMapping("/board/") 하지 않으셨다면
메소드들의 @RequestMapping에 일일이 board를 입력해줘여됩니다.
ex) @RequestMapping("/board/create")


2.method=RequestMethod.GET(POST)
-Rest 방식중에서 GET/POST/PUT/DELETE를 설정하는 것으로
위에서는 /create라는 경로가 2개이지만 GET인지 POST인지에 따라 호출되는
메소드가 달라집니다.
간단히 GET/POST방식의 차이점을 이야기 해드리자면
GET은 URL에 정보를 넣고 보내 원하는 자료를 요청하는 것으로
URL에 해당하는 자료의 전송을 요청하는 것이고
POST는 <body>에 숨겨서 보내는 것으로
서버가 처리할 수 있는 자료를 보내는 것입니다.
따라서  회원정보와 같이 민감한 정보들은 url(주소창)에 보여지면 안되기 때문에
POST로 전송처리를 하는것이 일반적입니다.
(대게 GET과 POST만으로 수정/삭제 처리가 가능하기때문에
PUT(수정)/DELETE(삭제)보다 중요합니다.)

3.Model
-Model이라는 클래스는 스프링 MVC에서 제공하는 데이터를 전달해주는 객체입니다.
Servlet을 공부하셨더라면 RequstDispatcher에 데이터를 저장하는 것과 같은 의미입니다.
즉, 알기쉽게 이야기하자면
model.addAttribute("result", "성공"); Model은 Map처럼 ket/value형태를 가지고 있고
return "/board/succes"; 이런게 리턴되는 곳 = succes.jsp 으로
데이터가 전달됩니다.
succes.jsp에서 ${result} 입력하게되면 "성공"이라는 문구가 뜨는겁니다.
(화면에 데이터를 뿌려주기위해 사용하는것 중 하나가 Model클래스라고 이해하세요)





